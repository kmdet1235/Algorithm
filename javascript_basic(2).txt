<<Javascript Basic 개념정리(2)>>

( Javascript의 객체와 불변성 )

- '원시형(primitive type)' 데이터는 오직 하나의 데이터(숫자, 문자열 등)만 담을 수 있음
- '객체형(object)'은 이와 달리 다양한 데이터를 담을 수 있음.
- '객체형'은 {...} 중괄호를 이용해서 만들며 '키(key)' : '값(value)'쌍으로 구성된 '속성(property)'을 여러개 넣을 수 있음
- '키'에는 문자형이, '값'에는 모든 자료형이 허용됨.


** 빈 객체 선언 예시
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

let user = new Object(); // '객체 생성자' 문법

let user = {};  // '객체 리터럴' 문법 : 중괄호를 사용하는 방법, 주로 사용됨

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


( 기본형 데이터와 참조형 데이터 )

- 객체와 원시 타입의 근본적인 차이는 '참조에 의해(by reference)'저장되고 복사가됨.
- 예를 들면, 아래와 같은 예시문에서 객체'user'는 메모리 어딘가에 저장되고, 'user'엔 '참조'할 수 있는 값이 저장됨

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

let user = { name: "John" };

let admin = user; // 참조값을 복사함

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

- 따라서 객체가 할당된 변수를 복사할 땐 객체의 참조 값이 복사되고 객체는 복사되지 않음. 즉 변수는 두 개이지만 각 변수엔 동일한 참조값이 저장됨.
- 비유를 통해서 표현하자면, 서로 다른 두 사람이 각자 집을 가지고 있고 각각의 집에 같은 티비를 구비하고있다고 가정한다. 
  a의 티비는 기본형이라 가정하고, b의 티비는 참조형이라고 가정한다. a가 TV를 바꾸고 싶어서 다른 더 좋은 TV가 있는 집으로 이사가는 것이
  기본형의 특징이고, b는 더 좋은 TV를 가지기 위해서 새로운 TV를 구입해 집에 있는 TV랑 바꾸는 형식이라고 이해했다.